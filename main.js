// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π
// –≠—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
const MetaverseConfig = {
    // –¶–≤–µ—Ç–æ–≤—ã–µ —Ç–µ–º—ã –¥–ª—è —Å—Ü–µ–Ω—ã
    themes: {
        default: { background: 0x1a1a2e, primaryColor: '#4cc9f0' },
        nature: { background: 0x1b5e20, primaryColor: '#2ecc71' },
        tech: { background: 0x0d47a1, primaryColor: '#3498db' },
        dark: { background: 0x111111, primaryColor: '#9b59b6' },
        light: { background: 0xf5f5f5, primaryColor: '#2980b9' }
    },

    // –í–∞—Ä–∏–∞–Ω—Ç—ã –∞–≤–∞—Ç–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å
    avatarOptions: [
        'https://cdn-icons-png.flaticon.com/512/4333/4333609.png',
        'https://cdn-icons-png.flaticon.com/512/3667/3667325.png',
        'https://cdn-icons-png.flaticon.com/512/4140/4140048.png'
    ],

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π (–æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è)
    modeSettings: {
        learn: {
            background: 0x1a237e, // –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω
            objects: ['book', 'laptop', 'blackboard'], // –ü—Ä–∏–º–µ—Ä –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞
            description: '–†–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è'
        },
        work: {
            background: 0x263238, // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω
            objects: ['desk', 'computer', 'chart'],
            description: '–†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ'
        },
        fun: {
            background: 0x4a148c, // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π —Ñ–æ–Ω
            objects: ['gamepad', 'ball', 'dancefloor'],
            description: '–ó–æ–Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π'
        }
    },

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –∏–≥—Ä–µ
    achievements: {
        first_learn: {
            title: '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π',
            description: '–í–ø–µ—Ä–≤—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è',
            icon: 'üìö'
        },
        all_modes: {
            title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
            description: '–ü–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –≤—Å–µ —Ä–µ–∂–∏–º—ã –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π',
            icon: 'üåê'
        },
        vr_explorer: {
            title: 'VR –ü–∏–æ–Ω–µ—Ä',
            description: '–í–ø–µ—Ä–≤—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ VR —Ä–µ–∂–∏–º',
            icon: 'üëì'
        },
        long_session: {
            title: '–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π',
            description: '–ü—Ä–æ–≤–µ–ª–∏ –±–æ–ª–µ–µ 1 —á–∞—Å–∞ –≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π',
            icon: '‚è≥'
        },
        socializer: {
            title: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π',
            description: '–î–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞',
            icon: 'üë•'
        },
        gamer: {
            title: '–ò–≥—Ä–æ–º–∞–Ω',
            description: '–°—ã–≥—Ä–∞–ª–∏ –≤–æ –≤—Å–µ –º–∏–Ω–∏-–∏–≥—Ä—ã',
            icon: 'üéÆ'
        }
    },

    // –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–ø—ã—Ç–∞ –∏ –≤–∞–ª—é—Ç—ã
    xpPerMinute: 1,
    currencyPerMinute: 0.5,
    levelMultiplier: 1.2,
    
    // –ü—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    shopItems: [
        { id: 'avatar1', name: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∞–≤–∞—Ç–∞—Ä', price: 50 },
        { id: 'theme1', name: '–¢—ë–º–Ω–∞—è —Ç–µ–º–∞', price: 30 },
        { id: 'effect1', name: '–≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü', price: 70 }
    ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Three.js –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
const AppState = {
    // THREE.js —ç–ª–µ–º–µ–Ω—Ç—ã
    scene: null,
    camera: null,
    renderer: null,
    controls: null, // –î–æ–±–∞–≤–ª—è–µ–º OrbitControls –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–º–µ—Ä–æ–π –º—ã—à—å—é

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ VR/AR
    vrEnabled: false,
    arEnabled: false, // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è AR

    // –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π
    currentMode: null,

    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userData: {
        username: '',
        avatar: '',
        theme: 'default',
        interests: [],
        achievements: [],
        stats: {
            timeSpent: 0, // –í –º–∏–Ω—É—Ç–∞—Ö
            lastLogin: null,
            level: 1, // –£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            experience: 0, // –û–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            currency: 0 // –í–∞–ª—é—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        },
        activityHistory: [],
        friends: [],
        gamesPlayed: []
    },

    // 3D –æ–±—ä–µ–∫—Ç—ã –Ω–∞ —Å—Ü–µ–Ω–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏
    objects: [],

    // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    sessionStartTime: null,
    sessionTimer: null, // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–∞–π–º–µ—Ä–∞ —Å–µ—Å—Å–∏–∏

    // WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (–¥–ª—è —á–∞—Ç–∞ –∏ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞)
    socket: null,

    // –°–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞
    chatMessages: [],

    // –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞ (–¥–ª—è –º–∏–Ω–∏-–∫–∞—Ä—Ç—ã –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è)
    playerPosition: { x: 0, y: 0, z: 0 },
    inventory: [], // –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    settings: { // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        volume: 50,
        controls: 'standard'
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initApp);

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    console.log("–ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        showLoadingScreen(() => {
            // –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –≤—ã–∑–≤–∞–Ω—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
            loadUserData();
            init3DScene();
            setupEventListeners();
            startSessionTimer();
            updateMiniMap();
            initShop(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
            initWebSocket(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –¥–ª—è —á–∞—Ç–∞
            showWelcomeBackNotification(); // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        });
        console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", error);
        document.getElementById('loading-text').textContent = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + error.message;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function showLoadingScreen(callback) {
    const loadingScreen = document.getElementById('loading-screen');
    const loadingBar = document.getElementById('loading-bar');
    let progress = 0;

    const interval = setInterval(() => {
        progress += 5; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        if (progress > 100) {
            progress = 100;
            clearInterval(interval);
            // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            loadingScreen.style.opacity = '0';
            setTimeout(() => {
                loadingScreen.style.display = 'none';
                if (callback) callback(); // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è
            }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        }
        loadingBar.style.width = `${progress}%`;
        document.getElementById('loading-text').textContent = `–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π... ${progress}%`;
    }, 100);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è 3D —Å—Ü–µ–Ω—ã
function init3DScene() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è 3D —Å—Ü–µ–Ω—ã...");
    try {
        // 1. –°—Ü–µ–Ω–∞: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ü–µ–Ω—É THREE.js
        AppState.scene = new THREE.Scene();
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω —Å—Ü–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        updateSceneTheme(); 
        
        // 2. –ö–∞–º–µ—Ä–∞: –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—É—é –∫–∞–º–µ—Ä—É
        AppState.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        AppState.camera.position.set(0, 1.5, 5); // –ù–µ–º–Ω–æ–≥–æ –ø—Ä–∏–ø–æ–¥–Ω–∏–º–∞–µ–º –∫–∞–º–µ—Ä—É –∏ –æ—Ç–æ–¥–≤–∏–≥–∞–µ–º –Ω–∞–∑–∞–¥
        
        // 3. –†–µ–Ω–¥–µ—Ä–µ—Ä: –°–æ–∑–¥–∞–µ–º WebGL —Ä–µ–Ω–¥–µ—Ä–µ—Ä –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ 3D-–≥—Ä–∞—Ñ–∏–∫–∏
        AppState.renderer = new THREE.WebGLRenderer({ 
            antialias: true, // –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –∫—Ä–∞–µ–≤
            alpha: true // –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ñ–æ–Ω–∞
        });
        AppState.renderer.setSize(window.innerWidth, window.innerHeight); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞
        AppState.renderer.setPixelRatio(window.devicePixelRatio); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏–∫—Å–µ–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–ª—è —á–µ—Ç–∫–æ—Å—Ç–∏
        // –î–æ–±–∞–≤–ª—è–µ–º DOM-—ç–ª–µ–º–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–µ
        document.getElementById('metaverse-container').appendChild(AppState.renderer.domElement);
        
        // 4. –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–µ –≤ —Å—Ü–µ–Ω—É
        addBasicLights();
        
        // 5. –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤ —Å—Ü–µ–Ω—É
        addDefaultObjects();

        // 6. –î–æ–±–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–Ω–æ–µ –ø–æ–ª–µ –∏ —á–∞—Å—Ç–∏—Ü—ã –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
        createStarfield();
        createParticles();
        
        // 7. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OrbitControls –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–º–µ—Ä–æ–π –º—ã—à—å—é
        // –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Ä–∞—â–∞—Ç—å, –ø—Ä–∏–±–ª–∏–∂–∞—Ç—å –∏ –æ—Ç–¥–∞–ª—è—Ç—å –∫–∞–º–µ—Ä—É
        AppState.controls = new THREE.OrbitControls(AppState.camera, AppState.renderer.domElement);
        AppState.controls.enableDamping = true; // –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã
        AppState.controls.dampingFactor = 0.25; // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–µ–º–ø—Ñ–∏—Ä–æ–≤–∞–Ω–∏—è
        AppState.controls.screenSpacePanning = false; // –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —ç–∫—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
        AppState.controls.maxPolarAngle = Math.PI / 2; // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —É–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –∫–∞–º–µ—Ä—ã (–Ω–µ–ª—å–∑—è —Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥ –∑–µ–º–ª—é)
        
        // 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        window.addEventListener('resize', handleWindowResize);
        
        // 9. –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –∞–Ω–∏–º–∞—Ü–∏–∏
        animate();
        console.log("3D —Å—Ü–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ.");
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ 3D —Å—Ü–µ–Ω—ã:", e);
        throw e; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è –≤ —Å—Ü–µ–Ω—É
function addBasicLights() {
    // 1. –§–æ–Ω–æ–≤–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ: —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –æ—Å–≤–µ—â–∞–µ—Ç –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã
    const ambientLight = new THREE.AmbientLight(0x404040, 0.5);
    AppState.scene.add(ambientLight);
    
    // 2. –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–≤–µ—Ç: –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Å–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç, –∏–¥—É—â–∏–π –∏–∑ –æ–¥–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);
    directionalLight.position.set(5, 10, 7.5); // –ü–æ–∑–∏—Ü–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å–≤–µ—Ç–∞
    directionalLight.castShadow = true; // –í–∫–ª—é—á–∞–µ–º —Ç–µ–Ω–∏ –æ—Ç —ç—Ç–æ–≥–æ —Å–≤–µ—Ç–∞
    AppState.scene.add(directionalLight);
    
    // 3. –¢–æ—á–µ—á–Ω—ã–π —Å–≤–µ—Ç: —Å–≤–µ—Ç, –∏—Å—Ö–æ–¥—è—â–∏–π –∏–∑ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏ –≤–æ –≤—Å–µ —Å—Ç–æ—Ä–æ–Ω—ã
    const pointLight = new THREE.PointLight(0x4cc9f0, 1, 100); // –¶–≤–µ—Ç, –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å, –¥–∏—Å—Ç–∞–Ω—Ü–∏—è
    pointLight.position.set(0, 5, 0); // –ü–æ–∑–∏—Ü–∏—è –ª–∞–º–ø–æ—á–∫–∏
    AppState.scene.add(pointLight);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö 3D-–æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Å—Ü–µ–Ω—É
function addDefaultObjects() {
    // 1. –ü–æ–ª: –±–æ–ª—å—à–∞—è –ø–ª–æ—Å–∫–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å
    const planeGeometry = new THREE.PlaneGeometry(20, 20); // –†–∞–∑–º–µ—Ä—ã 20x20
    const planeMaterial = new THREE.MeshPhongMaterial({ 
        color: 0x333333, // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ü–≤–µ—Ç
        side: THREE.DoubleSide // –í–∏–¥–µ–Ω —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω
    });
    const plane = new THREE.Mesh(planeGeometry, planeMaterial);
    plane.rotation.x = -Math.PI / 2; // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–ª–æ—Å–∫–æ—Å—Ç—å, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π
    plane.position.y = -0.5; // –û–ø—É—Å–∫–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ
    plane.receiveShadow = true; // –ü–æ–ª –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–µ–Ω–∏
    AppState.scene.add(plane);
    
    // 2. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫—É–± (—É–∂–µ –±—ã–ª)
    const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);
    const cubeMaterial = new THREE.MeshPhongMaterial({ 
        color: 0x4cc9f0, // –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç
        shininess: 100 // –ë–ª–µ—Å–∫
    });
    const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
    cube.userData = { 
        interactive: true, 
        type: 'welcome',
        name: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫—É–±'
    };
    cube.position.set(0, 0.5, 0); // –ü–æ–¥–Ω–∏–º–∞–µ–º –Ω–∞–¥ –ø–æ–ª–æ–º
    cube.castShadow = true; // –ö—É–± –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–Ω–∏
    AppState.scene.add(cube);
    AppState.objects.push(cube); // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    
    // 3. –°—Ñ–µ—Ä–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è (—É–∂–µ –±—ã–ª–∞)
    const sphereGeometry = new THREE.SphereGeometry(0.7, 32, 32); // –£–≤–µ–ª–∏—á–∏–º —Ä–∞–∑–º–µ—Ä
    const sphereMaterial = new THREE.MeshPhongMaterial({ 
        color: 0xf72585, // –†–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç
        emissive: 0xff0066, // –ò–∑–ª—É—á–∞—é—â–∏–π —Å–≤–µ—Ç (–Ω–µ–º–Ω–æ–≥–æ —Å–≤–µ—Ç–∏—Ç—Å—è)
        emissiveIntensity: 0.2 // –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è
    });
    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
    sphere.position.set(-3, 1, 0); // –ü–æ–∑–∏—Ü–∏—è
    sphere.userData = { 
        interactive: true, 
        type: 'learn',
        name: '–°—Ñ–µ—Ä–∞ –∑–Ω–∞–Ω–∏–π'
    };
    sphere.castShadow = true;
    AppState.scene.add(sphere);
    AppState.objects.push(sphere);
    
    // 4. –¢–æ—Ä –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π (—É–∂–µ –±—ã–ª)
    const torusGeometry = new THREE.TorusGeometry(0.8, 0.3, 16, 100); // –£–≤–µ–ª–∏—á–∏–º —Ä–∞–∑–º–µ—Ä
    const torusMaterial = new THREE.MeshPhongMaterial({ 
        color: 0x7209b7, // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π —Ü–≤–µ—Ç
        specular: 0xffffff // –ë–ª–∏–∫–∏
    });
    const torus = new THREE.Mesh(torusGeometry, torusMaterial);
    torus.position.set(3, 1, 0); // –ü–æ–∑–∏—Ü–∏—è
    torus.userData = { 
        interactive: true, 
        type: 'fun',
        name: '–ö–æ–ª—å—Ü–æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π'
    };
    torus.castShadow = true;
    AppState.scene.add(torus);
    AppState.objects.push(torus);

    // 5. –î–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç: –¶–∏–ª–∏–Ω–¥—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã
    const cylinderGeometry = new THREE.CylinderGeometry(0.6, 0.6, 2, 32); // –†–∞–¥–∏—É—Å –≤–µ—Ä—Ö/–Ω–∏–∑, –≤—ã—Å–æ—Ç–∞, —Å–µ–≥–º–µ–Ω—Ç—ã
    const cylinderMaterial = new THREE.MeshPhongMaterial({
        color: 0x4895ef, // –°–∏–Ω–∏–π —Ü–≤–µ—Ç
        flatShading: true // –ü–ª–æ—Å–∫–æ–µ –∑–∞—Ç–µ–Ω–µ–Ω–∏–µ
    });
    const cylinder = new THREE.Mesh(cylinderGeometry, cylinderMaterial);
    cylinder.position.set(0, 1, -3); // –ü–æ–∑–∏—Ü–∏—è
    cylinder.userData = {
        interactive: true,
        type: 'work',
        name: '–¶–∏–ª–∏–Ω–¥—Ä —Ä–∞–±–æ—Ç—ã'
    };
    cylinder.castShadow = true;
    AppState.scene.add(cylinder);
    AppState.objects.push(cylinder);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–≤–µ–∑–¥–Ω–æ–≥–æ –ø–æ–ª—è –Ω–∞ –∑–∞–¥–Ω–µ–º –ø–ª–∞–Ω–µ
function createStarfield() {
    const starsGeometry = new THREE.BufferGeometry();
    const starsMaterial = new THREE.PointsMaterial({
        color: 0xffffff, // –ë–µ–ª—ã–µ –∑–≤–µ–∑–¥—ã
        size: 0.1, // –†–∞–∑–º–µ—Ä –∑–≤–µ–∑–¥—ã
        transparent: true,
        opacity: 0.8 // –ù–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ
    });

    const starsVertices = [];
    // –°–æ–∑–¥–∞–µ–º 5000 —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–≤–µ–∑–¥ –≤ –±–æ–ª—å—à–æ–º –æ–±—ä–µ–º–µ
    for (let i = 0; i < 5000; i++) {
        starsVertices.push(
            THREE.MathUtils.randFloatSpread(2000), // X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –æ—Ç -1000 –¥–æ 1000
            THREE.MathUtils.randFloatSpread(2000), // Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
            THREE.MathUtils.randFloatSpread(2000)  // Z –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
        );
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∑–≤–µ–∑–¥
    starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));
    const starField = new THREE.Points(starsGeometry, starsMaterial);
    AppState.scene.add(starField); // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–Ω–æ–µ –ø–æ–ª–µ –≤ —Å—Ü–µ–Ω—É
}

// –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Å—Ç–∏—Ü (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—ã–ª–∏ –∏–ª–∏ —Ç—É–º–∞–Ω–∞)
function createParticles() {
    const particlesGeometry = new THREE.BufferGeometry();
    const particlesCnt = 1000; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–∏—Ü
    
    const posArray = new Float32Array(particlesCnt * 3); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π (x, y, z –¥–ª—è –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏—Ü—ã)
    for(let i = 0; i < particlesCnt * 3; i++) {
        posArray[i] = (Math.random() - 0.5) * 10; // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ—Ç -5 –¥–æ 5
    }

    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
    const particlesMaterial = new THREE.PointsMaterial({
        size: 0.02, // –†–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏—Ü—ã
        color: 0x4cc9f0, // –¶–≤–µ—Ç —á–∞—Å—Ç–∏—Ü (–≥–æ–ª—É–±–æ–π)
        transparent: true,
        opacity: 0.8 // –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    });
    
    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
    AppState.scene.add(particlesMesh); // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—ã –≤ —Å—Ü–µ–Ω—É
}

// ======================
// –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ======================

// –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –∞–Ω–∏–º–∞—Ü–∏–∏: –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–Ω–æ–≥–æ —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ü–µ–Ω—ã
function animate() {
    requestAnimationFrame(animate); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∫–∞–¥—Ä –∞–Ω–∏–º–∞—Ü–∏–∏

    // –û–±–Ω–æ–≤–ª—è–µ–º OrbitControls (–µ—Å–ª–∏ –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
    if (AppState.controls) {
        AppState.controls.update();
    }

    // –í—Ä–∞—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    AppState.objects.forEach(obj => {
        if (obj.userData.interactive) {
            obj.rotation.x += 0.005; // –í—Ä–∞—â–µ–Ω–∏–µ –ø–æ –æ—Å–∏ X
            obj.rotation.y += 0.01;  // –í—Ä–∞—â–µ–Ω–∏–µ –ø–æ –æ—Å–∏ Y
        }
    });
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ü–µ–Ω—ã: –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ü–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é –∫–∞–º–µ—Ä—ã
    AppState.renderer.render(AppState.scene, AppState.camera);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ VR —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞
    if (AppState.vrEnabled && AppState.renderer.xr.isPresenting) {
        AppState.renderer.xr.update();
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞
function handleWindowResize() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –∫–∞–º–µ—Ä—ã
    AppState.camera.aspect = window.innerWidth / window.innerHeight;
    AppState.camera.updateProjectionMatrix(); // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ç—Ä–∏—Ü—É –ø—Ä–æ–µ–∫—Ü–∏–∏ –∫–∞–º–µ—Ä—ã
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞
    AppState.renderer.setSize(window.innerWidth, window.innerHeight);
}

// ======================
// –†–ê–ë–û–¢–ê –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú
// ======================

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –±—Ä–∞—É–∑–µ—Ä–∞
function loadUserData() {
    const savedData = localStorage.getItem('metaverseUserData');
    
    if (savedData) {
        try {
            AppState.userData = JSON.parse(savedData);
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
            AppState.userData.stats.lastLogin = new Date().toISOString();
            updateUI(); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            resetUserData(); // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Ö
        }
    } else {
        resetUserData(); // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
    }
}

// –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function resetUserData() {
    AppState.userData = {
        username: '',
        avatar: '',
        theme: 'default',
        interests: [],
        achievements: [],
        stats: {
            timeSpent: 0,
            lastLogin: new Date().toISOString(),
            level: 1,
            experience: 0,
            currency: 0
        },
        activityHistory: [],
        friends: [],
        gamesPlayed: []
    };
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±—Ä–∞—É–∑–µ—Ä–∞
function saveUserData() {
    localStorage.setItem('metaverseUserData', JSON.stringify(AppState.userData));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (UI) –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö AppState.userData
function updateUI() {
    // 1. –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É—Ä–æ–≤–µ–Ω—å
    const usernameElement = document.querySelector('.username');
    const levelElement = document.querySelector('.level');
    if (usernameElement) {
        usernameElement.textContent = AppState.userData.username || '–ì–æ—Å—Ç—å';
    }
    if (levelElement) {
        levelElement.textContent = `–£—Ä–æ–≤–µ–Ω—å: ${AppState.userData.stats.level}`;
    }
    
    // 2. –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateAvatarUI();
    
    // 3. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    const achievementsCountElement = document.getElementById('achievements-count');
    if (achievementsCountElement) {
        achievementsCountElement.textContent = AppState.userData.achievements.length;
    }
    
    // 4. –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π
    updateTimeSpentUI();

    // 5. –ü–æ–ª–æ—Å–∞ –æ–ø—ã—Ç–∞
    updateExperienceBar();

    // 6. –í–∞–ª—é—Ç–∞
    updateCurrencyUI();
    
    // 7. –î—Ä—É–∑—å—è –æ–Ω–ª–∞–π–Ω
    updateFriendsOnline();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –≤ UI
function updateAvatarUI() {
    const avatarElement = document.getElementById('avatar');
    if (!avatarElement) return;

    avatarElement.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ

    if (AppState.userData.avatar) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å URL –∞–≤–∞—Ç–∞—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const img = document.createElement('img');
        img.src = AppState.userData.avatar;
        img.alt = '–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
        avatarElement.appendChild(img);
        avatarElement.style.backgroundColor = 'transparent'; // –£–±–∏—Ä–∞–µ–º —Ñ–æ–Ω, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    } else if (AppState.userData.username) {
        // –ï—Å–ª–∏ –Ω–µ—Ç URL, –Ω–æ –µ—Å—Ç—å –∏–º—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ü–≤–µ—Ç
        avatarElement.textContent = AppState.userData.username.charAt(0).toUpperCase();
        avatarElement.style.backgroundColor = stringToColor(AppState.userData.username);
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ —Ç–æ–≥–æ, –Ω–∏ –¥—Ä—É–≥–æ–≥–æ, —Å—Ç–∞–≤–∏–º –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫
        avatarElement.textContent = '?';
        avatarElement.style.backgroundColor = '#4cc9f0';
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–≤–µ—Ç–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ)
function stringToColor(str) {
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
        hash = str.charCodeAt(i) + ((hash << 5) - hash);
    }
    const color = `hsl(${hash % 360}, 70%, 60%)`;
    return color;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π
function updateTimeSpentUI() {
    const timeSpentElement = document.getElementById('time-spent');
    if (!timeSpentElement) return;

    const hours = Math.floor(AppState.userData.stats.timeSpent / 60);
    const minutes = AppState.userData.stats.timeSpent % 60;
    timeSpentElement.textContent = `${hours > 0 ? `${hours}h ` : ''}${minutes}m`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–æ—Å—ã –æ–ø—ã—Ç–∞
function updateExperienceBar() {
    const expBar = document.querySelector('.experience-bar .progress');
    const currentLevelExp = AppState.userData.stats.experience;
    const nextLevelExpNeeded = calculateExpForNextLevel(AppState.userData.stats.level);

    if (expBar) {
        const progress = (currentLevelExp / nextLevelExpNeeded) * 100;
        expBar.style.width = `${progress}%`;
    }
}

// –†–∞—Å—á–µ—Ç –æ–ø—ã—Ç–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
function calculateExpForNextLevel(level) {
    return Math.floor(100 * (level * MetaverseConfig.levelMultiplier));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
function updateCurrencyUI() {
    const currencyElement = document.querySelector('.currency');
    if (currencyElement) {
        currencyElement.textContent = `${Math.floor(AppState.userData.stats.currency)} –º–æ–Ω–µ—Ç`;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –¥—Ä—É–∑–µ–π –æ–Ω–ª–∞–π–Ω
function updateFriendsOnline() {
    const friendsOnlineElement = document.getElementById('friends-online');
    if (!friendsOnlineElement) return;

    const onlineFriends = AppState.userData.friends.filter(friend => friend.status === '–æ–Ω–ª–∞–π–Ω');
    friendsOnlineElement.textContent = onlineFriends.length;
}

// ======================
// –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê
// ======================

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)
function showUsernameModal() {
    // –í–º–µ—Å—Ç–æ prompt, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–æ–¥–∞–ª
    const usernameModal = document.createElement('div');
    usernameModal.className = 'modal';
    usernameModal.id = 'initial-username-modal';
    usernameModal.innerHTML = `
        <div class="modal-content">
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω—É—é!</h2>
            <p>–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?</p>
            <input type="text" id="initial-username-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" value="${AppState.userData.username || '–ì–æ—Å—Ç—å'}">
            <button id="set-initial-username">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</button>
        </div>
    `;
    document.body.appendChild(usernameModal);
    usernameModal.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª

    const usernameInput = document.getElementById('initial-username-input');
    const setUsernameBtn = document.getElementById('set-initial-username');

    setUsernameBtn.addEventListener('click', () => {
        const username = usernameInput.value.trim();
        if (username) {
            AppState.userData.username = username;
            saveUserData();
            updateUI();
            usernameModal.style.display = 'none';
            usernameModal.remove(); // –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            showAvatarModal(); // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä
        } else {
            showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è!');
        }
    });

    // –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    setTimeout(() => usernameInput.focus(), 100);
}


// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –∞–≤–∞—Ç–∞—Ä–∞
function showAvatarModal() {
    const modal = document.getElementById('avatar-modal');
    if (!modal) return;
    modal.style.display = 'flex';
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
    document.querySelectorAll('.avatar-option').forEach(option => {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const oldClickListener = option.__clickListener;
        if (oldClickListener) {
            option.removeEventListener('click', oldClickListener);
        }

        const newClickListener = function() {
            const avatarIndex = parseInt(this.getAttribute('data-avatar')) - 1;
            setAvatar(MetaverseConfig.avatarOptions[avatarIndex]);
        };
        option.addEventListener('click', newClickListener);
        option.__clickListener = newClickListener; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
    const setCustomAvatarBtn = document.getElementById('set-custom-avatar');
    if (setCustomAvatarBtn) {
        const oldCustomClickListener = setCustomAvatarBtn.__clickListener;
        if (oldCustomClickListener) {
            setCustomAvatarBtn.removeEventListener('click', oldCustomClickListener);
        }

        const newCustomClickListener = () => {
            const url = document.getElementById('custom-avatar-url').value.trim();
            if (url) {
                setAvatar(url);
            } else {
                showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ URL –∞–≤–∞—Ç–∞—Ä–∞');
            }
        };
        setCustomAvatarBtn.addEventListener('click', newCustomClickListener);
        setCustomAvatarBtn.__clickListener = newCustomClickListener;
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeAvatarModalBtn = document.getElementById('close-avatar-modal');
    if (closeAvatarModalBtn) {
        const oldCloseListener = closeAvatarModalBtn.__clickListener;
        if (oldCloseListener) {
            closeAvatarModalBtn.removeEventListener('click', oldCloseListener);
        }

        const newCloseListener = () => {
            modal.style.display = 'none';
            // –ï—Å–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª –∏–º–µ–Ω–∏
            if (!AppState.userData.username) {
                showUsernameModal();
            } else {
                showWelcomeBackNotification();
            }
        };
        closeAvatarModalBtn.addEventListener('click', newCloseListener);
        closeAvatarModalBtn.__clickListener = newCloseListener;
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function setAvatar(url) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if (!url.match(/^https?:\/\/.+\..+/)) {
        showNotification('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π URL —Å http:// –∏–ª–∏ https://');
        return;
    }
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const img = new Image();
    img.onload = () => {
        AppState.userData.avatar = url;
        saveUserData();
        updateAvatarUI(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        showNotification('–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        document.getElementById('avatar-modal').style.display = 'none'; // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
    };
    img.onerror = () => {
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É.');
    };
    img.src = url;
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥—Ä—É–∑–µ–π
function showFriendsModal() {
    const modal = document.getElementById('friends-modal');
    if (!modal) return;
    modal.style.display = 'flex';
    
    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
    const friendsList = document.getElementById('friends-list');
    if (friendsList) {
        friendsList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º
        AppState.userData.friends.forEach(friend => {
            const friendTemplate = document.getElementById('friend-template');
            const friendElement = friendTemplate.content.cloneNode(true);
            
            // –ê–≤–∞—Ç–∞—Ä –¥—Ä—É–≥–∞
            const avatar = friendElement.querySelector('.friend-avatar');
            avatar.textContent = friend.name.charAt(0).toUpperCase();
            avatar.style.backgroundColor = stringToColor(friend.name);
            
            friendElement.querySelector('.friend-name').textContent = friend.name;
            friendElement.querySelector('.friend-status').textContent = friend.status;
            
            // –ö–Ω–æ–ø–∫–∞ —á–∞—Ç–∞ —Å –¥—Ä—É–≥–æ–º
            const chatWithFriendBtn = friendElement.querySelector('.chat-with-friend');
            if (chatWithFriendBtn) {
                chatWithFriendBtn.addEventListener('click', () => {
                    const chatInput = document.getElementById('chat-input');
                    if (chatInput) {
                        chatInput.value = `@${friend.name} `;
                        chatInput.focus();
                    }
                    modal.style.display = 'none';
                    showNotification(`–ù–∞—á–∞—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —Å ${friend.name}`);
                });
            }
            friendsList.appendChild(friendElement);
        });
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞
    const addFriendBtn = document.getElementById('add-friend-btn');
    if (addFriendBtn) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const oldAddFriendListener = addFriendBtn.__clickListener;
        if (oldAddFriendListener) {
            addFriendBtn.removeEventListener('click', oldAddFriendListener);
        }
        addFriendBtn.addEventListener('click', addFriend);
        addFriendBtn.__clickListener = addFriend; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModalBtn = document.querySelector('#friends-modal .close-modal');
    if (closeModalBtn) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥—Ä—É–≥–∞
function addFriend() {
    const friendNameInput = document.getElementById('friend-username');
    if (!friendNameInput) return;

    const friendName = friendNameInput.value.trim();
    
    if (!friendName) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –¥—Ä—É–∑—å—è.');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ —Å–µ–±—è
    if (AppState.userData.friends.some(f => f.name.toLowerCase() === friendName.toLowerCase()) || 
        friendName.toLowerCase() === AppState.userData.username.toLowerCase()) {
        showNotification('–≠—Ç–æ—Ç –¥—Ä—É–≥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –∏–ª–∏ —ç—Ç–æ –≤–∞—à–µ –∏–º—è.');
        return;
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞ (—Å—Ç–∞—Ç—É—Å —Å–ª—É—á–∞–π–Ω—ã–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
    AppState.userData.friends.push({
        name: friendName,
        status: Math.random() > 0.5 ? '–æ–Ω–ª–∞–π–Ω' : '–æ—Ñ–ª–∞–π–Ω'
    });
    
    saveUserData();
    updateUI(); // –û–±–Ω–æ–≤–ª—è–µ–º UI, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–æ–≤–æ–≥–æ –¥—Ä—É–≥–∞
    showFriendsModal(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–∞–ª –¥—Ä—É–∑–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    friendNameInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–°–æ—Ü–∏–∞–ª—å–Ω—ã–π", –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –¥—Ä—É–≥
    if (AppState.userData.friends.length === 1) {
        unlockAchievement('socializer');
    }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –º–∏–Ω–∏-–∏–≥—Ä
function showGamesModal() {
    const modal = document.getElementById('games-modal');
    if (!modal) return;
    modal.style.display = 'flex';
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
    document.querySelectorAll('.game-card').forEach(card => {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const oldGameClickListener = card.__gameClickListener;
        if (oldGameClickListener) {
            card.removeEventListener('click', oldGameClickListener);
        }

        const newGameClickListener = function() {
            const game = this.getAttribute('data-game');
            launchMiniGame(game);
            modal.style.display = 'none'; // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
        };
        card.addEventListener('click', newGameClickListener);
        card.__gameClickListener = newGameClickListener;
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModalBtn = document.querySelector('#games-modal .close-modal');
    if (closeModalBtn) {
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}

// –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏-–∏–≥—Ä—ã (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
function launchMiniGame(game) {
    let gameName = '';
    switch (game) {
        case 'quiz':
            gameName = '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞';
            break;
        case 'platformer':
            gameName = '–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä';
            break;
        case 'puzzle':
            gameName = '–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞';
            break;
        default:
            gameName = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞';
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª–∏
    if (!AppState.userData.gamesPlayed.includes(game)) {
        AppState.userData.gamesPlayed.push(game);
        saveUserData();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–ò–≥—Ä–æ–º–∞–Ω" (—Å—ã–≥—Ä–∞–ª–∏ –≤–æ –≤—Å–µ 3 –∏–≥—Ä—ã)
        if (AppState.userData.gamesPlayed.length === 3) {
            unlockAchievement('gamer');
        }
    }
    
    showNotification(`–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã: ${gameName}. (–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.)`);
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function showAchievementsModal() {
    const modal = document.getElementById('achievements-modal');
    if (!modal) return;
    modal.style.display = 'flex';
    
    const achievementsList = document.getElementById('achievements-list');
    if (achievementsList) {
        achievementsList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏–∑ MetaverseConfig
        Object.entries(MetaverseConfig.achievements).forEach(([id, achievement]) => {
            const template = document.getElementById('achievement-template');
            const achievementElement = template.content.cloneNode(true);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const unlocked = AppState.userData.achievements.includes(id);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            achievementElement.querySelector('.achievement-icon').textContent = 
                unlocked ? achievement.icon : 'üîí'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–º–æ–∫, –µ—Å–ª–∏ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
                
            achievementElement.querySelector('.achievement-title').textContent = 
                unlocked ? achievement.title : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ';
                
            achievementElement.querySelector('.achievement-description').textContent = 
                unlocked ? achievement.description : '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å!';
                
            achievementsList.appendChild(achievementElement);
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModalBtn = document.querySelector('#achievements-modal .close-modal');
    if (closeModalBtn) {
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function showSettingsModal() {
    const modal = document.getElementById('settings-modal'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–∞–∫–æ–π –º–æ–¥–∞–ª –µ—Å—Ç—å –≤ HTML
    if (!modal) {
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ HTML.');
        return;
    }
    modal.style.display = 'flex';

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–≥—Ä–æ–º–∫–æ—Å—Ç—å, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ç.–¥.)
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª–∑—É–Ω–æ–∫ –¥–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    const volumeSlider = modal.querySelector('#volume-slider'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è id="volume-slider"
    if (volumeSlider) {
        volumeSlider.value = AppState.settings.volume;
        volumeSlider.oninput = (e) => {
            AppState.settings.volume = parseInt(e.target.value);
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            console.log('–ì—Ä–æ–º–∫–æ—Å—Ç—å:', AppState.settings.volume);
            saveUserData();
        };
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModalBtn = modal.querySelector('.close-modal');
    if (closeModalBtn) {
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}


// ======================
// –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
// ======================

// –ü–æ–∫–∞–∑ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
function showNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    
    const container = document.getElementById('notification-container');
    if (!container) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç #notification-container –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        return;
    }
    container.appendChild(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.classList.add('show');
    }, 10); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è CSS-–ø–µ—Ä–µ—Ö–æ–¥–∞
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        notification.classList.remove('show'); // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        setTimeout(() => {
            notification.remove(); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ DOM –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        }, 300); // –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å transition –≤ CSS
    }, 5000);
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function showWelcomeBackNotification() {
    if (AppState.userData.username) {
        showNotification(`–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${AppState.userData.username}!`);
    }
}

// ======================
// –†–ï–ñ–ò–ú–´ –ò –¢–ï–ú–´ (3D, VR, AR, –û–±—É—á–µ–Ω–∏–µ, –†–∞–±–æ—Ç–∞, –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è)
// ======================

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π
function setMode(mode) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π —Ä–µ–∂–∏–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–º
    if (!MetaverseConfig.modeSettings[mode] && mode !== null) {
        showNotification(`–†–µ–∂–∏–º "${mode}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        return;
    }
    if (AppState.currentMode === mode) {
        showNotification(`–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ "${mode || '3D'}"`);
        return;
    }
    
    AppState.currentMode = mode; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º
    
    // 1. –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é —Å—Ü–µ–Ω—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º
    updateSceneForMode(mode);
    
    // 2. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫–æ–π —Ä–µ–∂–∏–º –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)
    recordActivity(mode);
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    checkAchievements();
    
    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞
    const modeDescription = mode ? MetaverseConfig.modeSettings[mode].description : '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π 3D —Ä–µ–∂–∏–º';
    showNotification(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ–∂–∏–º: ${modeDescription}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É —Ä–µ–∂–∏–º–∞ –≤ UI
    document.querySelectorAll('#mode-panel .mode-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    if (mode === null) { // –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ 3D —Ä–µ–∂–∏–º–∞
        document.getElementById('3d-btn').classList.add('active');
    } else {
        const activeBtn = document.querySelector(`.action-btn[data-mode="${mode}"]`) || document.getElementById(`${mode}-btn`);
        if (activeBtn) {
            activeBtn.classList.add('active');
        }
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã THREE.js –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º
function updateSceneForMode(mode) {
    const modeConfig = MetaverseConfig.modeSettings[mode];
    
    if (modeConfig) {
        // 1. –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ —Å—Ü–µ–Ω—ã
        AppState.scene.background = new THREE.Color(modeConfig.background);
        
        // 2. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ "learn" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–Ω–∏–≥–∏, –∞ –≤ "fun" - –∏–≥—Ä—ã.
        // –ü–æ–∫–∞ –º—ã –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —Ñ–æ–Ω.
        
        // 3. –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        updateLightingForMode(mode);
    } else {
        // –ï—Å–ª–∏ —Ä–µ–∂–∏–º –Ω–µ –∑–∞–¥–∞–Ω (—Ç.–µ. —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π 3D), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        AppState.scene.background = new THREE.Color(MetaverseConfig.themes.default.background);
        updateLightingForMode('default');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
function updateLightingForMode(mode) {
    // –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–≤–µ—Ç–∞ –≤ —Å—Ü–µ–Ω–µ
    const ambientLight = AppState.scene.children.find(child => child instanceof THREE.AmbientLight);
    const directionalLight = AppState.scene.children.find(child => child instanceof THREE.DirectionalLight);
    const pointLight = AppState.scene.children.find(child => child instanceof THREE.PointLight);
    
    if (ambientLight) {
        switch (mode) {
            case 'learn':
                ambientLight.intensity = 0.6; // –ù–µ–º–Ω–æ–≥–æ —è—Ä—á–µ
                break;
            case 'work':
                ambientLight.intensity = 0.8; // –Ø—Ä—á–µ
                break;
            case 'fun':
                ambientLight.intensity = 0.4; // –¢–µ–º–Ω–µ–µ, –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
                break;
            default:
                ambientLight.intensity = 0.5; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–≤–µ—Ç–∞ (—Ü–≤–µ—Ç, –ø–æ–∑–∏—Ü–∏—è) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∂–∏–º–∞
    if (directionalLight) {
        directionalLight.color.set(0xffffff); // –ë–µ–ª—ã–π —Å–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        directionalLight.intensity = 0.8;
    }
    if (pointLight) {
        pointLight.color.set(0x4cc9f0); // –ì–æ–ª—É–±–æ–π —Å–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        pointLight.intensity = 1;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º—ã —Å—Ü–µ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
function updateSceneTheme() {
    const theme = MetaverseConfig.themes[AppState.userData.theme || 'default'];
    if (AppState.scene) {
        AppState.scene.background = new THREE.Color(theme.background);
    }
    // –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç–∞ UI-—ç–ª–µ–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–µ–º—ã
    document.documentElement.style.setProperty('--primary-color', theme.primaryColor);
}

// ======================
// VR/AR –§–£–ù–ö–¶–ò–ò
// ======================

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ VR —Ä–µ–∂–∏–º–∞
function toggleVR() {
    if (!AppState.vrEnabled) {
        enableVR();
    } else {
        disableVR();
    }
}

// –í–∫–ª—é—á–µ–Ω–∏–µ VR —Ä–µ–∂–∏–º–∞
async function enableVR() {
    if (!('xr' in navigator)) {
        showNotification('WebXR (VR) –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º.');
        return;
    }
    
    try {
        const supported = await navigator.xr.isSessionSupported('immersive-vr');
        if (supported) {
            const sessionInit = { optionalFeatures: ['local-floor', 'bounded-floor'] }; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è VR
            const session = await navigator.xr.requestSession('immersive-vr', sessionInit);
            setupVRSession(session);
        } else {
            showNotification('VR —Ä–µ–∂–∏–º –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º.');
        }
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ VR —Å–µ—Å—Å–∏–∏:', err);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å VR —Ä–µ–∂–∏–º: ' + err.message);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VR —Å–µ—Å—Å–∏–∏
function setupVRSession(session) {
    AppState.vrEnabled = true;
    document.getElementById('vr-btn').textContent = '–í—ã–π—Ç–∏ –∏–∑ VR';
    
    AppState.renderer.xr.setSession(session);
    AppState.renderer.xr.enabled = true;
    
    session.addEventListener('end', disableVR); // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è VR —Å–µ—Å—Å–∏–∏
    
    setupVRControllers(); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º VR-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
    
    showNotification('VR —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
    unlockAchievement('vr_explorer'); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
}

// –í—ã–∫–ª—é—á–µ–Ω–∏–µ VR —Ä–µ–∂–∏–º–∞
function disableVR() {
    if (AppState.renderer.xr.getSession()) {
        AppState.renderer.xr.getSession().end().catch(e => console.error("–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è VR —Å–µ—Å—Å–∏–∏:", e));
    }
    
    AppState.vrEnabled = false;
    document.getElementById('vr-btn').textContent = 'VR';
    AppState.renderer.xr.enabled = false;
    showNotification('VR —Ä–µ–∂–∏–º –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VR –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ (–¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –≤ VR)
function setupVRControllers() {
    // –ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥–µ–ª–µ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
    const controllerModelFactory = new THREE.XRControllerModelFactory();
    
    for (let i = 0; i < 2; i++) { // –î–ª—è –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        const controller = AppState.renderer.xr.getController(i);
        controller.addEventListener('selectstart', onVRSelectStart); // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        controller.addEventListener('selectend', onVRSelectEnd);   // –û—Ç–ø—É—Å–∫–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        AppState.scene.add(controller); // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ —Å—Ü–µ–Ω—É

        // –î–æ–±–∞–≤–ª—è–µ–º 3D-–º–æ–¥–µ–ª—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, —á—Ç–æ–±—ã –µ–≥–æ –±—ã–ª–æ –≤–∏–¥–Ω–æ –≤ VR
        const controllerGrip = AppState.renderer.xr.getControllerGrip(i);
        controllerGrip.add(controllerModelFactory.createControllerModel(controllerGrip));
        AppState.scene.add(controllerGrip);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –Ω–∞ VR-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ
function onVRSelectStart(event) {
    const controller = event.target;
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å –∫–∞–∫–∏–º –æ–±—ä–µ–∫—Ç–æ–º –≤ 3D-–º–∏—Ä–µ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è –ª—É—á –æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    const intersections = getControllerIntersections(controller);
    
    if (intersections.length > 0) {
        const object = intersections[0].object;
        if (object.userData.interactive) {
            handleObjectInteraction(object); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–±—ä–µ–∫—Ç–æ–º
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –Ω–∞ VR-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ
function onVRSelectEnd(event) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π –ª—É—á–∞ –æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ —Å—Ü–µ–Ω—ã
function getControllerIntersections(controller) {
    const tempMatrix = new THREE.Matrix4();
    tempMatrix.identity().extractRotation(controller.matrixWorld); // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    
    const raycaster = new THREE.Raycaster();
    raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld); // –ù–∞—á–∞–ª–æ –ª—É—á–∞ - –ø–æ–∑–∏—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix); // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª—É—á–∞ (–≤–ø–µ—Ä–µ–¥ –æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞)
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–µ—Ä–µ—Å–µ–∫—Å—è –ª—É—á
    return raycaster.intersectObjects(AppState.objects);
}

// AR —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
async function enableAR() {
    if (!('xr' in navigator)) {
        showNotification('WebXR (AR) –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º.');
        return;
    }

    try {
        const session = await navigator.xr.requestSession('immersive-ar', { requiredFeatures: ['hit-test'] });
        setupARSession(session);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ AR —Å–µ—Å—Å–∏–∏:', err);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å AR —Ä–µ–∂–∏–º: ' + err.message);
    }
}

function setupARSession(session) {
    AppState.arEnabled = true;
    document.getElementById('ar-btn').textContent = '–í—ã–π—Ç–∏ –∏–∑ AR';

    AppState.renderer.xr.setReferenceSpaceType('local'); // –¢–∏–ø –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è AR
    AppState.renderer.xr.setSession(session);
    AppState.renderer.xr.enabled = true;

    session.addEventListener('end', disableAR);

    showNotification('AR —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.');

    // –ü—Ä–∏–º–µ—Ä: —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏ —ç–∫—Ä–∞–Ω–∞ –≤ AR
    session.addEventListener('select', (event) => {
        if (event.inputSource.handedness === 'none') { // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Å–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
            const raycaster = new THREE.Raycaster();
            const pointer = new THREE.Vector2();
            pointer.x = (event.frame.session.inputSources[0].gamepad.axes[2] * 0.5) + 0.5;
            pointer.y = (event.frame.session.inputSources[0].gamepad.axes[3] * 0.5) + 0.5;

            raycaster.setFromCamera(pointer, AppState.camera);
            const intersections = raycaster.intersectObjects(AppState.scene.children);

            if (intersections.length > 0) {
                const intersect = intersections[0];
                const arObject = new THREE.Mesh(
                    new THREE.BoxGeometry(0.1, 0.1, 0.1),
                    new THREE.MeshBasicMaterial({ color: Math.random() * 0xffffff })
                );
                arObject.position.copy(intersect.point).add(intersect.face.normal);
                arObject.lookAt(AppState.camera.position); // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫ –∫–∞–º–µ—Ä–µ
                AppState.scene.add(arObject);
                showNotification('–û–±—ä–µ–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ AR!');
            }
        }
    });
}

function disableAR() {
    if (AppState.renderer.xr.getSession()) {
        AppState.renderer.xr.getSession().end().catch(e => console.error("–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è AR —Å–µ—Å—Å–∏–∏:", e));
    }
    AppState.arEnabled = false;
    document.getElementById('ar-btn').textContent = 'AR';
    AppState.renderer.xr.enabled = false;
    showNotification('AR —Ä–µ–∂–∏–º –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.');
}


// ======================
// –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï –° –û–ë–™–ï–ö–¢–ê–ú–ò
// ======================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –º—ã—à—å—é –ø–æ 3D-–æ–±—ä–µ–∫—Ç–∞–º
function onObjectClick(event) {
    // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω VR/AR —Ä–µ–∂–∏–º, —Ç–æ –∫–ª–∏–∫–∏ –º—ã—à—å—é –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    if (AppState.vrEnabled || AppState.arEnabled) return;
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∏–∫–∞ –º—ã—à–∏ –≤ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (-1 –¥–æ 1)
    const mouse = new THREE.Vector2(
        (event.clientX / window.innerWidth) * 2 - 1,
        -(event.clientY / window.innerHeight) * 2 + 1
    );
    
    const raycaster = new THREE.Raycaster();
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª—É—á –∏–∑ –∫–∞–º–µ—Ä—ã –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–∫–∞ –º—ã—à–∏
    raycaster.setFromCamera(mouse, AppState.camera);
    
    // –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è –ª—É—á
    const intersections = raycaster.intersectObjects(AppState.objects);
    
    if (intersections.length > 0) {
        const object = intersections[0].object; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π (–±–ª–∏–∂–∞–π—à–∏–π) –æ–±—ä–µ–∫—Ç
        if (object.userData.interactive) {
            handleObjectInteraction(object); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å 3D-–æ–±—ä–µ–∫—Ç–æ–º
function handleObjectInteraction(obj) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–∏–ø–µ
    if (!obj.userData.type) return;
    
    // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    switch (obj.userData.type) {
        case 'learn':
            setMode('learn'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–∞ "–æ–±—É—á–µ–Ω–∏–µ"
            break;
        case 'fun':
            setMode('fun'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–∞ "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
            break;
        case 'work':
            setMode('work'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–∞ "—Ä–∞–±–æ—Ç–∞"
            break;
        case 'welcome':
            showNotification(`–ü—Ä–∏–≤–µ—Ç, ${AppState.userData.username || '–¥—Ä—É–≥'}! –í—ã –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫—É–±.`);
            break;
        default:
            showNotification(`–í—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç–µ —Å ${obj.userData.name || '–æ–±—ä–µ–∫—Ç–æ–º'}`);
    }
}

// ======================
// –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ò –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
// ======================

// –ó–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–º–µ–Ω–∞ —Ä–µ–∂–∏–º–∞)
function recordActivity(mode) {
    AppState.userData.activityHistory.push({
        mode,
        timestamp: new Date().toISOString() // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    });
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 100 –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø–æ–ª–Ω—è—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    if (AppState.userData.activityHistory.length > 100) {
        AppState.userData.activityHistory.shift(); // –£–¥–∞–ª—è–µ–º —Å–∞–º—É—é —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å
    }
    
    saveUserData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function checkAchievements() {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ–±—É—á–µ–Ω–∏—è
    if (!AppState.userData.achievements.includes('first_learn') && 
        AppState.userData.activityHistory.some(a => a.mode === 'learn')) {
        unlockAchievement('first_learn');
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤ (–æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è)
    const modes = Object.keys(MetaverseConfig.modeSettings);
    const allModesUsed = modes.every(mode => 
        AppState.userData.activityHistory.some(a => a.mode === mode)
    );
    
    if (allModesUsed && !AppState.userData.achievements.includes('all_modes')) {
        unlockAchievement('all_modes');
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ—Å—Å–∏–∏ (–±–æ–ª–µ–µ 1 —á–∞—Å–∞)
    if (AppState.userData.stats.timeSpent >= 60 && 
        !AppState.userData.achievements.includes('long_session')) {
        unlockAchievement('long_session');
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–ò–≥—Ä–æ–º–∞–Ω" —É–∂–µ –µ—Å—Ç—å –≤ launchMiniGame
}

// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function unlockAchievement(id) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∏ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –æ–Ω–æ —É–∂–µ
    if (!MetaverseConfig.achievements[id] || AppState.userData.achievements.includes(id)) {
        return;
    }
    
    AppState.userData.achievements.push(id); // –î–æ–±–∞–≤–ª—è–µ–º ID –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ UI
    const achievementsCountElement = document.getElementById('achievements-count');
    if (achievementsCountElement) {
        achievementsCountElement.textContent = AppState.userData.achievements.length;
    }
    
    const achievement = MetaverseConfig.achievements[id];
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    showNotification(
        `${achievement.icon || 'üèÜ'} –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ${achievement.title}\n${achievement.description}`
    );
    
    saveUserData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

// ======================
// –ß–ê–¢
// ======================

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –¥–ª—è —á–∞—Ç–∞
function initWebSocket() {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É Socket.IO. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∞–¥—Ä–µ—Å —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.
    // –ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –Ω–µ—Ç –±—ç–∫–µ–Ω–¥–∞.
    AppState.socket = io(); 

    AppState.socket.on('connect', () => {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É.');
        showNotification('–ß–∞—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!');
    });

    AppState.socket.on('disconnect', () => {
        console.log('–û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç WebSocket —Å–µ—Ä–≤–µ—Ä–∞.');
        showNotification('–ß–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω.');
    });

    // –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –±—ã –±—ã–ª —Å–µ—Ä–≤–µ—Ä)
    AppState.socket.on('message', (msg) => {
        console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', msg);
        AppState.chatMessages.push(msg);
        updateChatUI();
    });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
function sendChatMessage() {
    const input = document.getElementById('chat-input');
    if (!input) return;

    const message = input.value.trim();
    
    if (!message) return; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const newMessage = {
        sender: AppState.userData.username || '–ì–æ—Å—Ç—å',
        text: message,
        time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
    AppState.chatMessages.push(newMessage);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ 100 –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    if (AppState.chatMessages.length > 100) {
        AppState.chatMessages.shift(); // –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞
    updateChatUI();
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    input.value = '';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ WebSocket (–µ—Å–ª–∏ –æ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω)
    if (AppState.socket && AppState.socket.connected) {
        AppState.socket.emit('sendMessage', newMessage);
    } else {
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —á–∞—Ç—É.');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
function updateChatUI() {
    const chatMessagesContainer = document.getElementById('chat-messages');
    if (!chatMessagesContainer) return;

    chatMessagesContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º
    
    AppState.chatMessages.forEach(message => {
        const template = document.getElementById('message-template');
        const messageElement = template.content.cloneNode(true); // –ö–ª–æ–Ω–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
        
        // –ê–≤–∞—Ç–∞—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∏–º–µ–Ω–∏)
        const avatar = messageElement.querySelector('.message-avatar');
        avatar.textContent = message.sender.charAt(0).toUpperCase();
        avatar.style.backgroundColor = stringToColor(message.sender);
        
        messageElement.querySelector('.message-sender').textContent = message.sender;
        messageElement.querySelector('.message-time').textContent = message.time;
        messageElement.querySelector('.message-text').textContent = message.text;
        
        chatMessagesContainer.appendChild(messageElement);
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –≤–Ω–∏–∑ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    chatMessagesContainer.scrollTop = chatMessagesContainer.scrollHeight;
}

// ======================
// –¢–ê–ô–ú–ï–† –°–ï–°–°–ò–ò –ò –ü–†–û–ì–†–ï–°–°
// ======================

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –æ–ø—ã—Ç–∞ –∏ –≤–∞–ª—é—Ç—ã
function startSessionTimer() {
    AppState.sessionStartTime = new Date(); // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    AppState.sessionTimer = setInterval(() => {
        AppState.userData.stats.timeSpent += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        AppState.userData.stats.experience += MetaverseConfig.xpPerMinute; // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—ã—Ç
        AppState.userData.stats.currency += MetaverseConfig.currencyPerMinute; // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª—é—Ç—É

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –æ–ø—ã—Ç–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
        const expNeededForNextLevel = calculateExpForNextLevel(AppState.userData.stats.level);
        if (AppState.userData.stats.experience >= expNeededForNextLevel) {
            AppState.userData.stats.level++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
            AppState.userData.stats.experience -= expNeededForNextLevel; // –í—ã—á–∏—Ç–∞–µ–º –æ–ø—ã—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
            showNotification(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –£—Ä–æ–≤–Ω—è ${AppState.userData.stats.level}!`);
        }

        updateUI(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        
        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
        if (AppState.userData.stats.timeSpent % 10 === 0) {
            saveUserData();
            showNotification('–î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
        }
        
        checkAchievements(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    }, 60000); // –ö–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ (1 –º–∏–Ω—É—Ç–∞)
}

// ======================
// –ò–ù–í–ï–ù–¢–ê–†–¨ –ò –ú–ê–ì–ê–ó–ò–ù
// ======================

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª—É—à–∫–∞)
function initShop() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('–ú–∞–≥–∞–∑–∏–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:', MetaverseConfig.shopItems);
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function showInventoryModal() {
    const modal = document.getElementById('inventory-modal'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–∞–∫–æ–π –º–æ–¥–∞–ª –µ—Å—Ç—å –≤ HTML
    if (!modal) {
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ HTML.');
        return;
    }
    modal.style.display = 'flex';

    const inventoryList = modal.querySelector('#inventory-list'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è id="inventory-list"
    if (inventoryList) {
        inventoryList.innerHTML = '';
        if (AppState.inventory.length === 0) {
            inventoryList.innerHTML = '<p>–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.</p>';
        } else {
            AppState.inventory.forEach(item => {
                const itemDiv = document.createElement('div');
                itemDiv.textContent = `${item.name} (x${item.quantity})`;
                inventoryList.appendChild(itemDiv);
            });
        }
    }

    const closeModalBtn = modal.querySelector('.close-modal');
    if (closeModalBtn) {
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞
function showShopModal() {
    const modal = document.getElementById('shop-modal'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–∞–∫–æ–π –º–æ–¥–∞–ª –µ—Å—Ç—å –≤ HTML
    if (!modal) {
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ HTML.');
        return;
    }
    modal.style.display = 'flex';

    const shopItemsGrid = modal.querySelector('#shop-items-grid'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è id="shop-items-grid"
    if (shopItemsGrid) {
        shopItemsGrid.innerHTML = '';
        MetaverseConfig.shopItems.forEach(item => {
            const itemCard = document.createElement('div');
            itemCard.className = 'shop-item-card';
            itemCard.innerHTML = `
                <h3>${item.name}</h3>
                <p>–¶–µ–Ω–∞: ${item.price} –º–æ–Ω–µ—Ç</p>
                <button data-item-id="${item.id}" class="buy-item-btn">–ö—É–ø–∏—Ç—å</button>
            `;
            shopItemsGrid.appendChild(itemCard);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–∫—É–ø–∫–∏
        shopItemsGrid.querySelectorAll('.buy-item-btn').forEach(button => {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            const oldBuyListener = button.__buyListener;
            if (oldBuyListener) {
                button.removeEventListener('click', oldBuyListener);
            }
            const newBuyListener = function() {
                const itemId = this.getAttribute('data-item-id');
                buyItem(itemId);
            };
            button.addEventListener('click', newBuyListener);
            button.__buyListener = newBuyListener;
        });
    }

    const closeModalBtn = modal.querySelector('.close-modal');
    if (closeModalBtn) {
        const oldCloseListener = closeModalBtn.__clickListener;
        if (oldCloseListener) {
            closeModalBtn.removeEventListener('click', oldCloseListener);
        }
        const newCloseListener = () => {
            modal.style.display = 'none';
        };
        closeModalBtn.addEventListener('click', newCloseListener);
        closeModalBtn.__clickListener = newCloseListener;
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
function buyItem(itemId) {
    const item = MetaverseConfig.shopItems.find(i => i.id === itemId);
    if (!item) {
        showNotification('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        return;
    }

    if (AppState.userData.stats.currency >= item.price) {
        AppState.userData.stats.currency -= item.price; // –í—ã—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç
        // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        const existingItem = AppState.inventory.find(i => i.id === item.id);
        if (existingItem) {
            existingItem.quantity++;
        } else {
            AppState.inventory.push({ id: item.id, name: item.name, quantity: 1 });
        }
        saveUserData();
        updateUI();
        showNotification(`–í—ã –∫—É–ø–∏–ª–∏ ${item.name}!`);
        showShopModal(); // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω
    } else {
        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏.');
    }
}


// ======================
// –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï –ò –ú–ò–ù–ò-–ö–ê–†–¢–ê
// ======================

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∏–Ω–∏-–∫–∞—Ä—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
function updateMiniMap() {
    const miniMap = document.getElementById('mini-map');
    if (!miniMap) return;

    // –û—á–∏—â–∞–µ–º –º–∏–Ω–∏-–∫–∞—Ä—Ç—É
    miniMap.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫—É, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â—É—é –∏–≥—Ä–æ–∫–∞
    const playerDot = document.createElement('div');
    playerDot.className = 'player-dot';
    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Ç–æ—á–∫—É –Ω–∞ –º–∏–Ω–∏-–∫–∞—Ä—Ç–µ (—Ü–µ–Ω—Ç—Ä 50%, –∑–∞—Ç–µ–º —Å–º–µ—â–µ–Ω–∏–µ)
    // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ 5% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É 3D-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞)
    playerDot.style.left = `${50 + AppState.playerPosition.x * 5}%`;
    playerDot.style.top = `${50 + AppState.playerPosition.z * 5}%`; // –ò—Å–ø–æ–ª—å–∑—É–µ–º Z –¥–ª—è "–≤–ø–µ—Ä–µ–¥/–Ω–∞–∑–∞–¥"
    miniMap.appendChild(playerDot);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–ª–∞–≤–∏—à
function handleMovement() {
    document.addEventListener('keydown', (e) => {
        const speed = 0.5; // –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
        let moved = false;

        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–º–µ—Ä—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
        switch(e.key.toLowerCase()) { // –ò—Å–ø–æ–ª—å–∑—É–µ–º .toLowerCase() –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
            case 'w': // –í–ø–µ—Ä–µ–¥
                AppState.camera.position.z -= speed;
                AppState.playerPosition.z -= speed;
                moved = true;
                break;
            case 's': // –ù–∞–∑–∞–¥
                AppState.camera.position.z += speed;
                AppState.playerPosition.z += speed;
                moved = true;
                break;
            case 'a': // –í–ª–µ–≤–æ
                AppState.camera.position.x -= speed;
                AppState.playerPosition.x -= speed;
                moved = true;
                break;
            case 'd': // –í–ø—Ä–∞–≤–æ
                AppState.camera.position.x += speed;
                AppState.playerPosition.x += speed;
                moved = true;
                break;
            case 'q': // –í–≤–µ—Ä—Ö (–ø—Ä—ã–∂–æ–∫ –∏–ª–∏ –ø–æ–ª–µ—Ç)
                AppState.camera.position.y += speed;
                AppState.playerPosition.y += speed;
                moved = true;
                break;
            case 'e': // –í–Ω–∏–∑
                AppState.camera.position.y -= speed;
                AppState.playerPosition.y -= speed;
                moved = true;
                break;
        }

        // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–æ –¥–≤–∏–∂–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω–∏-–∫–∞—Ä—Ç—É –∏ –∫–æ–Ω—Ç—Ä–æ–ª—ã –∫–∞–º–µ—Ä—ã
        if (moved) {
            updateMiniMap();
            if (AppState.controls) {
                AppState.controls.target.copy(AppState.camera.position); // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º OrbitControls –Ω–∞ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
                AppState.controls.update();
            }
        }
    });
}

// ======================
// –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–ë–´–¢–ò–ô
// ======================

function setupEventListeners() {
    // 1. –ö–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–æ–≤ (VR, AR, 3D)
    document.getElementById('vr-btn')?.addEventListener('click', toggleVR);
    document.getElementById('ar-btn')?.addEventListener('click', enableAR);
    document.getElementById('3d-btn')?.addEventListener('click', () => {
        setMode(null); // –°–±—Ä–æ—Å —Ä–µ–∂–∏–º–∞ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π 3D
    });
    document.getElementById('settings-btn')?.addEventListener('click', showSettingsModal); // –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    
    // 2. –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (–û–±—É—á–µ–Ω–∏–µ, –†–∞–±–æ—Ç–∞, –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, –î—Ä—É–∑—å—è, –ò–≥—Ä—ã)
    document.querySelectorAll('.action-btn[data-mode]').forEach(btn => {
        btn.addEventListener('click', function() {
            const mode = this.getAttribute('data-mode');
            setMode(mode);
        });
    });
    
    document.getElementById('friends-btn')?.addEventListener('click', showFriendsModal);
    document.getElementById('games-btn')?.addEventListener('click', showGamesModal);
    
    // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ 3D –æ–±—ä–µ–∫—Ç–∞–º
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º `?.` –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, —Ç–∞–∫ –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ —Å—Ä–∞–∑—É –¥–æ—Å—Ç—É–ø–Ω—ã
    AppState.renderer?.domElement.addEventListener('click', onObjectClick, false);
    
    // 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
    document.getElementById('send-btn')?.addEventListener('click', sendChatMessage);
    document.getElementById('chat-input')?.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            sendChatMessage();
        }
    });
    
    // 5. –ö–ª–∏–∫ –ø–æ –∞–≤–∞—Ç–∞—Ä—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
    document.getElementById('avatar-container')?.addEventListener('click', showAvatarModal);
    
    // 6. –ö–ª–∏–∫ –ø–æ —Å—á–µ—Ç—á–∏–∫—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    document.getElementById('achievements-count')?.addEventListener('click', showAchievementsModal);

    // 7. –ö–ª–∏–∫ –ø–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
    document.getElementById('inventory-btn')?.addEventListener('click', showInventoryModal); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å—Ç—å —Ç–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞

    // 8. –ö–ª–∏–∫ –ø–æ –º–∞–≥–∞–∑–∏–Ω—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    document.getElementById('shop-btn')?.addEventListener('click', showShopModal); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å—Ç—å —Ç–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞

    // 9. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ (–∫–ª–∞–≤–∏—à–∏ WASDQE)
    handleMovement();
    
    // 10. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)
    window.addEventListener('beforeunload', () => {
        if (AppState.sessionTimer) {
            clearInterval(AppState.sessionTimer); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
        }
        saveUserData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
        console.log("–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º.");
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    if (!AppState.userData.username) {
        showUsernameModal();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
function initSounds() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤...');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞—É–¥–∏–æ
}
